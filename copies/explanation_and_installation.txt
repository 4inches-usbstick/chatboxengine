DOC EXPLANATIONS:
cbedata and cbedata.py: explaining CBEDATA
pythonfunctions.txt: how to use chatboxengine.py
api.txt: API docs
change.txt: refresh rate explanation
flash.txt: flashing images trigger warning
control.txt: unused
htmlhelp.txt: explaining HTML chatboxes
explanation_and_installation.txt: installation instructions and documentation explanation


INSTALLATION INSTRUCTIONS:
This Read Me has the instructions for setting up Chatbox Engine for your server. 

--PART ZERO: PRE REQS--
You need the following things:

-an HTTP server 
-PHP 7.3 
-A C++ compiler (needed for PHP and some server software)
-text editor
-web browser

Make sure to read and understand the license before using Chatbox Engine.


--Initial Config--
You'll need to create a directory named textengine on the server. Not in any subfolders or other things, it needs to be its own parent directory.
Inside your new textengine directory, create another folder named sitechats. From there, copy the files and subdirectories into the sitechats dir.

Now, open .htamainpolicy with your favorite text editor and change these things in the config file:

PID  Change to
1    Your server's IP or domain name
3    Path to textengine dir without / on the end
5    Where Chatboxes should be copied when someone uses XCOPY, no / on the end
7    Where Chatbox Media dirs should be copied when someone uses MCOPY, no / on the end
9    Correct PHP timezone
11   Max upload file size in bytes. *
13   Allow media upload (YES to allow, NO to forbid)
15   Allow LOADEXE command (YES to allow, NO to forbid)
17   Allow users to name their own files (YES to allow, NO to forbid)
19   Use inchat_joinpage or joinchatpublic (YES for inchat_joinpage, NO for joinchatpublic)
21   Enable API (YES to unlock API and NO if you want everything to break)
23   Do TS checking (YES to enable timestamps, NO to disable all timestamps)
25   The filepath to the file that controls banned IP addresses, no / on the end.
27   What you would put into the aforementioned file to ban an IP. **
29   Banned phrases (use // to separate each word, i.e. "f*ck//sh*t//bit*h")
31   Illegal destintation Chatboxes. Use '.extension' to protect certain extensions (i.e. '.php//.py').
33   Whether or not to convert encodings upon request. (YES for convert, NO for don't convert)
35   Whether or not you want to allow Admin to remotely edit .htamainpolicy (YES for allow, NO for forbid).
37   PHP suppress errors in the terminal. 0 for suppress, and 1 for do not suppress.
39   Read the notes on PID 39 in the config file.
41   If the editing terminal needs the master key, YES for master and NO for master or uidukey.
43   Allow HTTP POST for sendmsg, YES for allow and NO for forbid.
45   Where to log terminal commands, needs a filepath (relative or absolute both OK).
47   Whether to terminal log, YES for log and NO for don't log.

--CBauth--
To add someone to the CBauth list, use this format:

#::Alias::Password::Permissions;

Number is the UID. This number must start from 1 and go up one by one.
Alias is the name that is tied to the UID.
Password (a.k.a. the UKEY) is the password tied to the UID,
Permissions is the permission level this user has (either sudo or notsudo).

CBauth is used to verify certain usernames when sending messages and issuing Terminal/Edit (TerminEdit) commands.
For issuing TerminEdit commands, use the UID and UKEY slots to verify your identity (and don't enter the password that TerminEdit commands usually want).
For sending messages with a protected username, enter the web client with the protected username, then enter the correct UID and UKEY in the web client. Any messages you send are now under the protected
username. If you try to use a protected username without the proper credentials, you will be stopped and your request to send a message will be denied.

-FILESAFE--

To protect a file from unauthorised writing add;
FILENAME::PERMISSION::

Filename is the file you want to protect from writing, and permission is who can write.
Permission has three levels: login, sudo and local.

login: users must be logged in (with a UID/UKEY)
sudo: users must be logged in as a sudo account
local: users cannot write to the file

Notes:
1. Make sure to credit me and others by linking to credits.cbedata.
2. Make sure your server protects all files ending in '.hta'
3. (**) from earlier: use %ip to show where you would put the IP to ban
4. (*) from earlier: this does not bypass server limit for file uploads

